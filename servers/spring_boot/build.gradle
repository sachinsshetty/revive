plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'eclipse'
}

archivesBaseName = 'app'

group = 'com.slabstech.revive'
version = '2.0.0'

dockerRepo = 'slabstech'

repositories {
	mavenCentral()
}

springBoot {
	mainClass = 'com.slabstech.revive.Application'
}

tasks.named("bootRun") {
	mainClass = 'com.slabstech.revive.Application'
}


task runServer(type: Exec) {
	dependsOn bootRun
	commandLine 'echo', 'start server'
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-cache"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "io.rest-assured:rest-assured"
	implementation 'javax.servlet:javax.servlet-api:4.0.1'


	implementation 'junit:junit:4.13.2'
	testImplementation 'junit:junit:4.13.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'org.postgresql:postgresql'

}

task copyDependencies(type: Copy) {
    from configurations.runtimeClasspath
    into "$buildDir/lib"
}

// creates your manifest file within the JAR
jar {
    manifest {
        attributes["Main-Class"] = "com.slabstech.revive.Application"
        attributes["Class-Path"] = configurations.runtimeClasspath.collect { 'lib/' + it.getName() }.join(' ')
    }
}


task buildServerDocker(type: Exec) {
    dependsOn copyDependencies, build
    workingDir "$projectDir"
    commandLine 'docker', 'build', '--rm', '.', '-t', "build-revive-server", "-f", "$projectDir/Dockerfile"
}

tasks.named('test') {
	useJUnitPlatform()
}
